@using MediatR;
@using NursesScheduler.BusinessLogic.CommandsAndQueries.Nurses.Queries.GetAllNurses;
@inject IMediator mediatr;

@if (Nurses == null)
{
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Surname</th>
                <th>Name</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var nurse in Nurses)
            {
                <tr>
                    <td>@nurse.Surname</td>
                    <td>@nurse.Name</td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<NurseViewModel>? Nurses { get; set; }

    private class NurseViewModel
    {
        public string Name { get; set; }
        public string Surname { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        var request = new GetAllNursesRequest();
        var response = await mediatr.Send(request);
        Nurses = new List<NurseViewModel>();
        foreach(var nurse in response)
        {
            Nurses.Add(new NurseViewModel
            {
                Name = nurse.Name,
                Surname = nurse.Surname
            });
        }
    }

    private async Task LoadNurses()
    {
        var request = new GetAllNursesRequest();
        var response = await mediatr.Send(request);
        Nurses = new List<NurseViewModel>();
        foreach(var nurse in response)
        {
            Nurses.Add(new NurseViewModel
            {
                Name = nurse.Name,
                Surname = nurse.Surname
            });
        }
        //StateHasChanged();
        Console.WriteLine("My debug output.");
    }
}
