@page "/departaments/edit/{Id:int}"

@inherits ExceptionHandlingComponent

@using NursesScheduler.BusinessLogic.CommandsAndQueries.Departaments.Queries.GetDepartament
@using NursesScheduler.BusinessLogic.CommandsAndQueries.Departaments.Commands.EditDepartament

@inject IMediator _mediatr;
@inject IMapper _mapper;

@if(_departament == null)
{
    <NursesScheduler.BlazorShared.Controls.Shared.LoadingSpinner/>
}
else
{
    <NursesScheduler.BlazorShared.Controls.Departaments.DepartamentForm Title="Edytuj oddział" Departament=@_departament SaveDepartament="SaveDepartament"/>
}



@code {
    protected DepartamentViewModel _departament;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) 
            await LoadDepartament();

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task LoadDepartament()
    {
        try
        {
            var request = new GetDepartamentRequest
            {
                DepartamentId = Id
            };
            var response = await _mediatr.Send(request);
            if (response == null) NavigationManager.NavigateTo("/notFound");
            _departament = _mapper.Map<DepartamentViewModel>(response);
            StateHasChanged();
        }
        catch (Exception e)
        {
            base.HandleException(e);
        }
        
    }

    protected async void SaveDepartament()
    {
        try
        {
            var request = _mapper.Map<EditDepartamentRequest>(_departament);
            var response = await _mediatr.Send(request);

            NavigationManager.NavigateTo("/departaments");
        }
        catch (Exception e)
        {
            base.HandleException(e);
        }
    }
}
