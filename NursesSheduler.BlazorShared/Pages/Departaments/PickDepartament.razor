@page "/departaments"

@using NursesScheduler.BlazorShared.ViewModels
@using MediatR;
@using AutoMapper;
@using NursesScheduler.BusinessLogic.CommandsAndQueries.Departaments.Queries.GetAllDepartaments
@using NursesScheduler.BusinessLogic.Interfaces.Infrastructure
@inject IMediator mediatr;
@inject IMapper mapper;

<div class="level container is-fluid">
    <div class="level-left">
        <div class="level-item has-text-centered">
            <p class="title">Wybierz oddział</p>
        </div>
    </div>
    <div class="level-right">
        <div class="level-item">
            <a class="button is-primary" href="/departaments/add">Dodaj nowy oddział</a>
        </div>
    </div>
</div>

<div class="container">
    @if (Departaments == null)
    {
        <NursesScheduler.BlazorShared.Controls.Shared.LoadingSpinner/>
    }
    else if(Departaments.Count == 0)
    {
        <div class="has-text-centered">
            <h4 class="subtitle is-4">Nie dodano jeszcze oddziału</h4>
        </div>
    }
    else
    {
        <div class="card-group">
            @foreach(var depatament in Departaments)
            {
                <NursesScheduler.BlazorShared.Controls.Departaments.DepartamentCard Departament=@depatament/>
            }
        </div>
    }
</div>


@code {
    private List<DepartamentViewModel> Departaments = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender) await LoadDepartaments();
    }

    private async Task LoadDepartaments()
    {
        var request = new GetAllDepartamentsRequest();
        var response = await mediatr.Send(request);

        Departaments = mapper.Map<List<DepartamentViewModel>>(response);
        StateHasChanged();
    }
}
