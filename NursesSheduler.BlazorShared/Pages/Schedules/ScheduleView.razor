@page "/scheduleView"

@using NursesScheduler.BusinessLogic.CommandsAndQueries.Nurses.Queries.GetNursesFromDepartament
@using NursesScheduler.BusinessLogic.CommandsAndQueries.Schedules.Queries.GetSchedule

@inherits ComponenentUsingDepartament

@inject IMediator mediatr;
@inject IMapper mapper;


<div class="container is-fluid">
    @if(!isLoaded)
    {
        <NursesScheduler.BlazorShared.Controls.Shared.LoadingSpinner/>
    }
    else
    {
        <div class="level">
            <div class="level-left">
                <div class="level-item">
                    <a>Konfiguracja ranków</a>
                </div>
                <div class="level-item">
                    <a>Konfiguracja generatora</a>
                </div>
                <div class="level-item">
                    <a>Drukuj</a>
                </div>
            </div>
        </div>
        <div class="level">
            <div class="level-left">
                <div class="level-item">
                    <label class="label">Miesiąc</label>
                </div>
                <div class="level-item">
                    <div class="control">
                        <div class="select">
                            <select value=@monthNumber @onchange="SelectedMonthChanged">
                                @for(int i = 1; i <= 12; i++)
                                {
                                    <option value="@i">@((Months)i)</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="level-item">
                    <label class="label">Rok</label>
                </div>
                <div class="level-item">
                    <div class="control">
                        <div class="select">
                            <select value=@yearNumber @onchange="SelectedYearChanged">
                                @for(int i = 2020; i < DateTime.Now.Year + 1; i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="level-item">
                    <button class="button is-info" @onclick="CurrentDateClick">Bieżący miesiąc</button>
                </div>
            </div>


            <div class="level-right">
                <div class="level-item">
                    <p class="control">
                      <a class="button is-info" href="/departaments/add">
                        <span class="icon">
                          <i class="fas fa-check" aria-hidden="true"></i>
                        </span>
                        <span>Sprawdź</span>
                      </a>
                    </p>
                </div>
                <div class="level-item">
                    <p class="control">
                      <a class="button is-danger" href="/departaments/add">
                        <span class="icon">
                          <i class="fas fa-xmark" aria-hidden="true"></i>
                        </span>
                        <span>Wyczyść</span>
                      </a>
                    </p>
                </div>
                <div class="level-item">
                    <p class="control">
                      <a class="button is-warning" href="/departaments/add">
                        <span class="icon">
                          <i class="fas fa-wand-magic-sparkles" aria-hidden="true"></i>
                        </span>
                        <span>Generuj</span>
                      </a>
                    </p>
                </div>
                <div class="level-item">
                    <p class="control">
                      <a class="button is-success" href="/departaments/add">
                        <span class="icon">
                          <i class="far fa-floppy-disk" aria-hidden="true"></i>
                        </span>
                        <span>Zapisz</span>
                      </a>
                    </p>
                </div>
            </div>
        </div>

        <div class="level">
            <div class="level-left">
                <div class="level-item">
                    <p>
                        <b>Kwartał:</b> 1
                    </p>
                </div>
                <div class="level-item">
                    <p>
                        <b>Norma:</b> 178:00
                    </p>
                </div>
                <div class="level-item">
                    <p>
                        <b>Gdodzin urlopu:</b> 178:00
                    </p>
                </div>
                <div class="level-item">
                    <p>
                        <b>Przydzielony urlop:</b> 178:00
                    </p>
                </div>
            </div>
            <div class="level-right">
                <p><b>Zapisano!</b></p>
            </div>
        </div>
    }
</div>


@code {
    private bool isLoaded = false;
    private int monthNumber = DateTime.Now.Month;
    private int yearNumber = DateTime.Now.Year;

    private ICollection<NurseViewModel> nurses;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var request = new GetNursesFromDepartamentRequest
            {
                DepartamentId = CurrentDepartamentStore.CurrentDepartament.DepartamentId
            };
            var response = await mediatr.Send(request);

            nurses = mapper.Map<List<NurseViewModel>>(response);

            isLoaded = true;
            StateHasChanged();
        }
    }

    private void SelectedYearChanged(ChangeEventArgs e)
    {

    }

    private void SelectedMonthChanged(ChangeEventArgs e)
    {

    }

    private void CurrentDateClick()
    {
        monthNumber = DateTime.Now.Month;
        yearNumber = DateTime.Now.Year;
        SearchSchedule();
    }

    private async void SearchSchedule()
    {
        var request = new GetScheduleRequest
        {
            Month = monthNumber,

        };
        var response = await mediatr.Send(request);

        if (response == null) InitialiseSchedule();
        else LoadSchedule(response);
    }

    private void InitialiseSchedule()
    {

    }

    private void LoadSchedule(GetScheduleResponse response)
    {
        
    }
}