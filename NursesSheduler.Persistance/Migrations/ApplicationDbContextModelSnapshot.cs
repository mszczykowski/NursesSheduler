// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NursesScheduler.Infrastructure.Context;

#nullable disable

namespace NursesScheduler.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("NurseShift", b =>
                {
                    b.Property<int>("AssignedNursesNurseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShiftsShiftId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignedNursesNurseId", "ShiftsShiftId");

                    b.HasIndex("ShiftsShiftId");

                    b.ToTable("NurseShift");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Absence", b =>
                {
                    b.Property<int>("AbsenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("AssignedWorkingHours")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("From")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("To")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearlyAbsencesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AbsenceId");

                    b.HasIndex("YearlyAbsencesId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Departament", b =>
                {
                    b.Property<int>("DepartamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("DepartamentId");

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Nurse", b =>
                {
                    b.Property<int>("NurseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("PTOentitlement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("NurseId");

                    b.HasIndex("DepartamentId");

                    b.ToTable("Nurses");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Schedules.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Holidays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MonthInQuarter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonthNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleId");

                    b.HasIndex("DepartamentId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Schedules.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShortShift")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("ShiftEnd")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("ShiftStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShiftId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.YearlyAbsencesSummary", b =>
                {
                    b.Property<int>("YearlyAbsencesSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NurseId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("PTO")
                        .HasColumnType("TEXT");

                    b.Property<int>("PTODays")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("PTOLeftFromPreviousYear")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("PTOUsed")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("YearlyAbsencesSummaryId");

                    b.HasIndex("NurseId");

                    b.ToTable("YearlyAbsences");
                });

            modelBuilder.Entity("NurseShift", b =>
                {
                    b.HasOne("NursesScheduler.Domain.DomainModels.Nurse", null)
                        .WithMany()
                        .HasForeignKey("AssignedNursesNurseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NursesScheduler.Domain.DomainModels.Schedules.Shift", null)
                        .WithMany()
                        .HasForeignKey("ShiftsShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Absence", b =>
                {
                    b.HasOne("NursesScheduler.Domain.DomainModels.YearlyAbsencesSummary", "YearlyAbsences")
                        .WithMany("Absences")
                        .HasForeignKey("YearlyAbsencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YearlyAbsences");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Nurse", b =>
                {
                    b.HasOne("NursesScheduler.Domain.DomainModels.Departament", "Departament")
                        .WithMany("Nurses")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Schedules.Schedule", b =>
                {
                    b.HasOne("NursesScheduler.Domain.DomainModels.Departament", "Departament")
                        .WithMany("Schedules")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Schedules.Shift", b =>
                {
                    b.HasOne("NursesScheduler.Domain.DomainModels.Schedules.Schedule", "Schedule")
                        .WithMany("Shifts")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.YearlyAbsencesSummary", b =>
                {
                    b.HasOne("NursesScheduler.Domain.DomainModels.Nurse", "Nurse")
                        .WithMany("YearlyAbsencesSummary")
                        .HasForeignKey("NurseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nurse");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Departament", b =>
                {
                    b.Navigation("Nurses");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Nurse", b =>
                {
                    b.Navigation("YearlyAbsencesSummary");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.Schedules.Schedule", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("NursesScheduler.Domain.DomainModels.YearlyAbsencesSummary", b =>
                {
                    b.Navigation("Absences");
                });
#pragma warning restore 612, 618
        }
    }
}
