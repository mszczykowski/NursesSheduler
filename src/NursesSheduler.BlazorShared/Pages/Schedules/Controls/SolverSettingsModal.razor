@inherits ModalBase

@if (_solverSettingsForm is not null)
{
    <div class="modal @CssHelper.SetIsActive(_isVisible)">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Ustawienia generatora</p>
                <button class="delete" aria-label="close" @onclick="ChangeVisibility"></button>
            </header>
            <EditForm EditContext="@_editContext">
                <section class="modal-card-body">
                    <ObjectGraphDataAnnotationsValidator/>
                    <fieldset disabled=@_solverSettingsForm.SolverSettings.UseOwnSeed>
                        <NumberInput Label="Liczba prób generatora" @bind-Value="_solverSettingsForm.SolverSettings.NumberOfRetries" ValidationFor="@(() => _solverSettingsForm.SolverSettings.NumberOfRetries)" />
                    </fieldset>
                    <fieldset disabled=@(!_solverSettingsForm.SolverSettings.UseOwnSeed)>
                        <TextInput Label="Ziarno generatora" @bind-Value="_solverSettingsForm.SolverSettings.GeneratorSeed" ValidationFor="@(() => _solverSettingsForm.SolverSettings.GeneratorSeed)"/>
                    </fieldset>
                    <div class="field">
                        <div class="control">
                            <label class="checkbox">
                                <InputCheckbox @bind-Value="_solverSettingsForm.SolverSettings.UseOwnSeed" />
                                Użyj własnego ziarna generatora
                            </label>
                        </div>
                    </div>
                </section>
                <footer class="modal-card-foot">
                    <div class="footer-buttons">
                        <Button Text="Anuluj" Action="base.ChangeVisibility" />
                        <Button Style="is-success" Text="Zapisz" Action="OnSubmit" />
                    </div>
                </footer>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public SolverSettingsViewModel SolverSettings { get; set; }

    private EditContext _editContext;
    private SolverSettingsFormViewModel _solverSettingsForm;

    public override void ShowModal()
    {
        _solverSettingsForm = new(SolverSettings);

        _editContext = new(_solverSettingsForm);
        _editContext.SetFieldCssClassProvider(new CustomFieldClassHelper());

        ChangeVisibility();
    }

    private void OnSubmit()
    {
        if (!_editContext.Validate())
        {
            return;
        }

        SolverSettings.UseOwnSeed = _solverSettingsForm.SolverSettings.UseOwnSeed;
        SolverSettings.GeneratorSeed = _solverSettingsForm.SolverSettings.GeneratorSeed;
        SolverSettings.NumberOfRetries = _solverSettingsForm.SolverSettings.NumberOfRetries;
        
        ChangeVisibility();
    }
}
